/** Created by Eli Muir (Synapse LLC)*	http://www.synapse.com*	http://wallofcool.synapse.com*	* Version 1.0*	Date Changed: 07/29/2010*/package org.synapse {		//import de.flamelab.display.Reflection;	//import com.pixelfumes.reflect.*;	//import br.com.stimuli.loading.BulkLoader;    //import br.com.stimuli.loading.BulkProgressEvent;	import flash.external.ExternalInterface;	import flash.display.*;	import flash.events.*;	import flash.net.*;	import flash.utils.*;	import fl.controls.ProgressBar;	import fl.transitions.Tween;	import fl.transitions.easing.*;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;		import org.synapse.ImageEvent;	import org.papervision3d.materials.*;	import org.papervision3d.objects.*;	import org.papervision3d.objects.primitives.*;	import org.papervision3d.events.InteractiveScene3DEvent;			public class wallImage extends MovieClip{				private var _bitmap:BitmapData;		private var _material:MovieMaterial;		private var _container:Sprite;		public var _plane:Plane;		private var _thmbnailWidth:Number = 120;		private var _thmbnailHeight:Number = 90;		private var _movieloader:Loader;		//private var _reflection:Reflection;		//private var pbar:ProgressBar;		private var movieClip:MovieClip;		private var preloaderClip:MovieClip;		private var loaderText:TextField;		private var myPlaneDictionary:Dictionary=new Dictionary();				public function wallImage(file:String, reflection:Boolean = false){						_movieloader = new Loader();	/* Set movie Loader */			_initialize(file, reflection);	/* Init Wall Image */					}				/*public function onMouseUp(event:Event):void{			dispatchEvent(new ImageEvent(ImageEvent.CLICK));		}*/					/**			* Get the plane for an image			*			* return _plane			*	returns the plane object			*/		public function get plane():Plane{			return _plane;		}					/**			* Initialize the image object			*			*/		private function _initialize(file:String, reflection:Boolean):void{						//preloaderClip = new MovieClip();							/* Create movieclip to hold imported elements */			movieClip = new MovieClip();					//movieClip.graphics.lineStyle(10, 0xFFFFFF);				//movieClip.graphics.beginFill(0xFF0000);				//movieClip.graphics.drawRoundRectComplex(0,0,_thmbnailWidth,_thmbnailHeight,8,8,8,8);				movieClip.graphics.drawRect(0,0,_thmbnailWidth,_thmbnailHeight);				movieClip.graphics.endFill();				//movieClip.alpha = 0.5;							/* Create Material for Movie using MovieClip created above */			_material = new MovieMaterial(movieClip);				_material.animated=true;     			_material.doubleSided=true;				_material.smooth=true;				_material.interactive=true;							/* Create Plane Obj */			_plane = new Plane(_material, _thmbnailWidth, _thmbnailHeight, 3, 3);				_plane.useOwnContainer = true;												/* Enables setting alpha/opacity for plane materials */				_plane.alpha = 100;															/* Set plane alpha */				_plane.addEventListener(InteractiveScene3DEvent.OBJECT_OVER, onMouseOver);	/* Add Mouse Over handler */				_plane.addEventListener(InteractiveScene3DEvent.OBJECT_OUT, onMouseOut);	/* Add Mouse Out handler */				_plane.addEventListener(InteractiveScene3DEvent.OBJECT_PRESS, onMouseClick);/* Add Mouse Click handler */							/* Add Events to Movie Loader Obj */			//_loader.contentLoaderInfo.addEventListener(Event.OPEN, _onOpen);			_movieloader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, onMovieLoadProgress); /* Add progress hanlder */			_movieloader.contentLoaderInfo.addEventListener(Event.COMPLETE, onMovieLoadComplete);		  /* Add load complete handler */			_movieloader.load(new URLRequest(file));	/* Load image file */			addChild(_movieloader);	/* add movie loader with image file to stage */							/* Check of reflection specified */			if(reflection){				//_reflection = new Reflection({target:this, alpha:60, ration: 100, distance:20, dropoff:0});				//var _reflection = new Reflect({mc:this, alpha:50, ratio:50, distance:0, updateTime:-1, reflectionDropoff:0});				//trace(this.name+":reflect");			}					}					/**			*	set the position of plane			*/		public function setPosition(x:int, y:int, z:int = 0):void{			_plane.x = x;	/* Set X position */			_plane.y = y;	/* Set Y position */			_plane.z = z;	/* Set Z position */		}					/**			*	set rotation of plane			*/		public function setRotation(x:String, val:int):void{			_plane.x = val;		}					/**			*	Load progress event handler			*/		private function onMovieLoadProgress(e:ProgressEvent):void {			dispatchEvent(new ImageEvent(ImageEvent.THUMBIMAGE_PROGRESS));			//_plane.visible = false;			///ExternalInterface.call( "console.log" , "Loading :"+ _loader.content.name);						/*var perc:Number = Math.round(e.target.bytesLoaded/e.target.bytesTotal);	//Get percent complete			var percFriendly:String = perc+"%"									//Create user friendly format			//ExternalInterface.call( "console.log" , percFriendly + e.target.name);			e.target.parent.label_txt.text = percFriendly;			//var trg:MovieClip = new e.currentTarget.parent;			//var trg2:MovieClip = new e.target.parent;			//trg.prg.text = percFriendly;			//trg2.prg.text = percFriendly;			*/		}									/**			*	Load Movie Complete event handler			*/		private function onMovieLoadComplete(e:Event):void{			dispatchEvent(new ImageEvent(ImageEvent.THUMBIMAGE_LOADED));			e.target.removeEventListener(ProgressEvent.PROGRESS, onMovieLoadProgress);			//e.target.content.width = e.target.parent.width;			//e.target.content.height = e.target.parent.height;						//pbar.removeEventListener(Event.COMPLETE, _onProgressComplete);						//_loader.content.alpha = 0;						//_loader.content.x = Math.round(movieClip.width - _loader.content.width) / 2;			//_loader.content.y = Math.round(movieClip.height - _loader.content.height) / 2;			//_movieloader.content.x = Math.round(_container.width - _movieloader.content.width) / 2;			//_movieloader.content.y = Math.round(_container.height - _movieloader.content.height) / 2;			_movieloader.content.width = _thmbnailWidth;			_movieloader.content.height = _thmbnailHeight;			movieClip.addChild(_movieloader.content);						/*if(_reflection != null) {				dispatchEvent(new ImageEvent(ImageEvent.THUMBIMAGE_REFLECT));				_reflection.render();			}*/			//_container.addChild(_movieloader.content);			//_plane.material = _material;			//_bitmap.draw(this);			//_plane.material.bitmap = _bitmap;			//_plane.material.interactive = true;			//_plane.material.buttonMode = true;			//_container.graphics.clear();						//LoadImagetoWall(_plane);			//setTimeout(LoadImagetoWall, Math.ceil(Math.random() * (2000 - 1)+1), _plane);						//var imageFade:Tween = new Tween(_plane, 'z', Strong.easeOut, 1800, _plane.z, 2, true);						//var imageFade1:Tween = new Tween(_plane, 'y', Strong.easeOut, -(stage.stageHeight+10), _plane.y, 2, true);			//var imageFade2:Tween = new Tween(_plane, 'x', Strong.easeOut, -(stage.stageWidth+10), _plane.x, 2, true);			//var imageFade3:Tween = new Tween(_plane, 'rotationY', Strong.easeOut, -90, 0, 5, true);						//movieClip.pbar.removeEventListener(Event.ENTER_FRAME, _onProgressLoad);			//var pbar:ProgressBar = ProgressBar(e.target);			//preloaders_mc.removeChild(my_pb);			//_loader.content.x = Math.round(movieClip.width - _loader.content.width) / 2;			//_loader.content.y = Math.round(movieClip.height - _loader.content.height) / 2;			//pbar.removeEventListener(ProgressEvent.PROGRESS, _onLoadProgress);			//pbar.removeEventListener(Event.COMPLETE, _onLoadComplete);		}					/**			*	Mouse over event handler			*/		private function onMouseOver(e:InteractiveScene3DEvent):void {			dispatchEvent(new ImageEvent(ImageEvent.THUMBIMAGE_OVER));		}				/**			*	Mouse out event handler			*/		private function onMouseOut(e:InteractiveScene3DEvent):void {			dispatchEvent(new ImageEvent(ImageEvent.THUMBIMAGE_OUT));		}				/**			*	Mouse click event handler			*/		private function onMouseClick(e:InteractiveScene3DEvent):void {			dispatchEvent(new ImageEvent(ImageEvent.THUMBIMAGE_CLICK));		}					/**			*	Mouse over event handler			*/		private function onMouseOver2(e:MouseEvent):void {			dispatchEvent(new ImageEvent(ImageEvent.THUMBIMAGE_OVER));		}					/**			*	Mouse out event handler			*/		private function onMouseOut2(e:MouseEvent):void {			dispatchEvent(new ImageEvent(ImageEvent.THUMBIMAGE_OUT));		}					/**			*	Mouse click event handler			*/		private function onMouseClick2(e:MouseEvent):void {			dispatchEvent(new ImageEvent(ImageEvent.THUMBIMAGE_CLICK));		}					/**			*				*/		private function LoadImagetoWall(obj){			//obj.visible = true;			var imageFade:Tween = new Tween(obj, 'alpha', Strong.easeOut, 0, 1, 2, true);			//var imageWidth:Tween = new Tween(obj, 'scaleX', Strong.easeOut, 0, 100, 2, true);			//var imageHeight:Tween = new Tween(obj, 'scaleY', Strong.easeOut, 0, 100, 2, true);			//var end:Number = obj.z;			//var imageFade:Tween = new Tween(obj, 'z', Strong.easeOut, 1800, end, 2, true);		}	}				}